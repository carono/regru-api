<?php
namespace carono\regru;
/**
 * Do not edit this file, it is automatically generated and can be overwritten in the future !!!
 * Generator: parser.php
 */
abstract class AbsClient extends BaseClient
{

	/**
	 * Возвращает login
	 *
	 * @see https://www.reg.ru/support/help/api2#common_nop
	 * @link https://api.reg.ru/api/regru2/nop?password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function nop()
	{
		$params = [

		];
		return $this->request('nop', $params);
	}


	/**
	 * Возвращает login
	 *
	 * @see https://www.reg.ru/support/help/api2#common_reseller_nop
	 * @link https://api.reg.ru/api/regru2/reseller_nop?password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function resellerNop()
	{
		$params = [

		];
		return $this->request('reseller_nop', $params);
	}


	/**
	 * Получение идентификатора авторизованного пользователя
	 *
	 * @see https://www.reg.ru/support/help/api2#common_get_user_id
	 * @link https://api.reg.ru/api/regru2/get_user_id?password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function getUserId()
	{
		$params = [

		];
		return $this->request('get_user_id', $params);
	}


	/**
	 * Возвращает service_id домена или услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#common_get_service_id
	 * @link https://api.reg.ru/api/regru2/get_service_id?domain_name=qqq.ru&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function getServiceId()
	{
		$params = [

		];
		return $this->request('get_service_id', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#user_nop
	 * @link https://api.reg.ru/api/regru2/user/nop?output_content_type=plain
	 *
	 *
	 * @return mixed
	 */
	public function userNop()
	{
		$params = [

		];
		return $this->request('user/nop', $params);
	}


	/**
	 * Регистрация нового пользователя
	 *
	 * @see https://www.reg.ru/support/help/api2#user_create
	 * @link https://api.reg.ru/api/regru2/user/create?output_content_type=plain&password=test&set_me_as_referrer=1&user_country_code=RU&user_email=test@example.com&user_login=othertest&user_mailnotify=0&user_password=xxxxx&username=test
	 *
	 *
	 * @return mixed
	 */
	public function userCreate()
	{
		$params = [

		];
		return $this->request('user/create', $params);
	}


	/**
	 * Получение статистики по пользователю
	 *
	 * @see https://www.reg.ru/support/help/api2#user_get_statistics
	 * @link https://api.reg.ru/api/regru2/user/get_statistics?output_content_type=plain&password=test&username=test
	 *
	 * @var mixed|null $date_from
	 * @var mixed|null $date_till
	 *
	 * @return mixed
	 */
	public function userGetStatistics($date_from = NULL, $date_till = NULL)
	{
		$params = [
			'date_from' => $date_from,
			'date_till' => $date_till
		];
		return $this->request('user/get_statistics', $params);
	}


	/**
	 * Просмотр баланса
	 *
	 * @see https://www.reg.ru/support/help/api2#user_get_balance
	 * @link https://api.reg.ru/api/regru2/user/get_balance?currency=RUR&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $currency
	 *
	 * @return mixed
	 */
	public function userGetBalance($currency)
	{
		$params = [
			'currency' => $currency
		];
		return $this->request('user/get_balance', $params);
	}


	/**
	 * Пополнение баланса
	 *
	 * @see https://www.reg.ru/support/help/api2#user_refill_balance
	 * @link https://api.reg.ru/api/regru2/user/refill_balance?amount=1000&currency=RUR&output_content_type=plain&password=test&pay_type=WM&username=test&wmid=123456789012
	 *
	 * @var mixed $amount
	 * @var mixed $currency
	 * @var mixed $wmid
	 * @var mixed $pay_type
	 *
	 * @return mixed
	 */
	public function userRefillBalance($amount, $currency, $wmid, $pay_type)
	{
		$params = [
			'amount' => $amount,
			'currency' => $currency,
			'wmid' => $wmid,
			'pay_type' => $pay_type
		];
		return $this->request('user/refill_balance', $params);
	}


	/**
	 * Установка URL для редиректа из внешней услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#user_set_reseller_url
	 * @link https://api.reg.ru/api/regru2/user/set_reseller_url?password=test&servtype=srv_seowizard&url=http://test2.com&url_type=refill&username=test
	 *
	 * @var mixed $url
	 * @var mixed $url_type
	 * @var mixed $servtype
	 *
	 * @return mixed
	 */
	public function userSetResellerUrl($url, $url_type, $servtype)
	{
		$params = [
			'url' => $url,
			'url_type' => $url_type,
			'servtype' => $servtype
		];
		return $this->request('user/set_reseller_url', $params);
	}


	/**
	 * Получение URL для редиректа из внешней услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#user_get_reseller_url
	 * @link https://api.reg.ru/api/regru2/user/get_reseller_url?password=test&servtype=srv_seowizard&url_type=refill&username=test
	 *
	 * @var mixed $url_type
	 * @var mixed $servtype
	 *
	 * @return mixed
	 */
	public function userGetResellerUrl($url_type, $servtype)
	{
		$params = [
			'url_type' => $url_type,
			'servtype' => $servtype
		];
		return $this->request('user/get_reseller_url', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#bill_nop
	 * @link https://api.reg.ru/api/regru2/bill/nop?bill_id=12345&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/bill/nop?input_data={"bills":["12345","12346"],"output_content_type":"plain"}&input_format=json&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/bill/nop?input_data={"bills":[{"bill_id":"12345"},{"bill_id":"12346"}],"output_content_type":"plain"}&input_format=json&password=test&username=test
	 *
	 * @var mixed $bills
	 * @var mixed $bill_id
	 *
	 * @return mixed
	 */
	public function billNop($bills, $bill_id)
	{
		$params = [
			'bills' => $bills,
			'bill_id' => $bill_id
		];
		return $this->request('bill/nop', $params);
	}


	/**
	 * Просмотр всех неоплаченных счетов
	 *
	 * @see https://www.reg.ru/support/help/api2#bill_get_not_payed
	 * @link https://api.reg.ru/api/regru2/bill/get_not_payed?output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $offset
	 * @var mixed $limit
	 *
	 * @return mixed
	 */
	public function billGetNotPayed($offset, $limit)
	{
		$params = [
			'offset' => $offset,
			'limit' => $limit
		];
		return $this->request('bill/get_not_payed', $params);
	}


	/**
	 * Просмотр счетов за указанный период
	 *
	 * @see https://www.reg.ru/support/help/api2#bill_get_for_period
	 * @link https://api.reg.ru/api/regru2/bill/get_for_period?end_date=1917-11-07&output_content_type=plain&password=test&start_date=1917-10-26&username=test
	 *
	 * @var mixed $offset
	 * @var mixed $all
	 * @var mixed $limit
	 * @var mixed $pay_type
	 * @var mixed $end_date
	 * @var mixed $start_date
	 *
	 * @return mixed
	 */
	public function billGetForPeriod($offset, $all, $limit, $pay_type, $end_date, $start_date)
	{
		$params = [
			'offset' => $offset,
			'all' => $all,
			'limit' => $limit,
			'pay_type' => $pay_type,
			'end_date' => $end_date,
			'start_date' => $start_date
		];
		return $this->request('bill/get_for_period', $params);
	}


	/**
	 * Смена способа оплаты
	 *
	 * @see https://www.reg.ru/support/help/api2#bill_change_pay_type
	 * @link https://api.reg.ru/api/regru2/bill/change_pay_type?input_data={"bills":["123456"],"pay_type":"prepay","currency":"RUR","output_content_type":"plain"}&input_format=json&password=test&username=test
	 *
	 * @var mixed $wmid
	 * @var mixed $currency
	 * @var mixed $pay_type
	 * @var mixed $bills
	 * @var mixed $bill_id
	 *
	 * @return mixed
	 */
	public function billChangePayType($wmid, $currency, $pay_type, $bills, $bill_id)
	{
		$params = [
			'wmid' => $wmid,
			'currency' => $currency,
			'pay_type' => $pay_type,
			'bills' => $bills,
			'bill_id' => $bill_id
		];
		return $this->request('bill/change_pay_type', $params);
	}


	/**
	 * Удаление неоплаченных счетов
	 *
	 * @see https://www.reg.ru/support/help/api2#bill_delete
	 * @link https://api.reg.ru/api/regru2/bill/delete?bill_id=12345&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/bill/delete?input_data={"bills":["12345","12346","12347"],"output_content_type":"plain"}&input_format=json
	 * @link https://api.reg.ru/api/regru2/bill/delete?input_data={"bills":[{"bill_id":"12345"},{"bill_id":"12346"},{"bill_id":"12347"}],"output_content_type":"plain"}&input_format=json&password=test&username=test
	 *
	 * @var mixed $bills
	 * @var mixed $bill_id
	 *
	 * @return mixed
	 */
	public function billDelete($bills, $bill_id)
	{
		$params = [
			'bills' => $bills,
			'bill_id' => $bill_id
		];
		return $this->request('bill/delete', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#service_nop
	 * @link https://api.reg.ru/api/regru2/service/nop?domain_name=test.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceNop()
	{
		$params = [

		];
		return $this->request('service/nop', $params);
	}


	/**
	 * Получение цен на активацию/продление услуг
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_prices
	 * @link https://api.reg.ru/api/regru2/service/get_prices?output_content_type=plain&password=test&username=test
	 *
	 * @var mixed|null $show_renew_data
	 * @var mixed|null $currency
	 *
	 * @return mixed
	 */
	public function serviceGetPrices($show_renew_data = NULL, $currency = NULL)
	{
		$params = [
			'show_renew_data' => $show_renew_data,
			'currency' => $currency
		];
		return $this->request('service/get_prices', $params);
	}


	/**
	 * Получение цен для услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_servtype_details
	 * @link https://api.reg.ru/api/regru2/service/get_servtype_details?output_content_type=plain&password=test&servtype=srv_hosting_ispmgr&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetServtypeDetails()
	{
		$params = [

		];
		return $this->request('service/get_servtype_details', $params);
	}


	/**
	 * Заказ услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_create
	 * @link https://api.reg.ru/api/regru2/service/create?dname=qqq.ru&output_content_type=plain&password=test&servtype=srv_parking&username=test
	 * @link https://api.reg.ru/api/regru2/service/create?dname=qqq.ru&output_content_type=plain&password=test&servtype=srv_parking&subtype=free&username=test
	 * @link https://api.reg.ru/api/regru2/service/create?dname=qqq.ru&output_content_type=plain&password=test&period=1&plan=Host-2-1209&servtype=srv_hosting_ispmgr&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceCreate()
	{
		$params = [

		];
		return $this->request('service/create', $params);
	}


	/**
	 * Удаление услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_delete
	 * @link https://api.reg.ru/api/regru2/service/delete?domain_name=test.ru&output_content_type=plain&password=test&servtype=srv_hosting_ispmgr&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceDelete()
	{
		$params = [

		];
		return $this->request('service/delete', $params);
	}


	/**
	 * Повторно выслать стартовое письмо активации услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_resend_startup_mail
	 *
	 *
	 * @return mixed
	 */
	public function serviceResendStartupMail()
	{
		$params = [

		];
		return $this->request('service/resend_startup_mail', $params);
	}


	/**
	 * Получить информацию об услугах
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_info
	 * @link https://api.reg.ru/api/regru2/service/get_info?input_data={"services":[{"domain_name":"test.ru"},{"service_id":"111111"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetInfo()
	{
		$params = [

		];
		return $this->request('service/get_info', $params);
	}


	/**
	 * Получить список активных услуг
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_list
	 * @link https://api.reg.ru/api/regru2/service/get_list?input_data={"servtype":"domain"}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $servtype
	 *
	 * @return mixed
	 */
	public function serviceGetList($servtype)
	{
		$params = [
			'servtype' => $servtype
		];
		return $this->request('service/get_list', $params);
	}


	/**
	 * Получить список папок в которые входит сервис
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_folders
	 * @link https://api.reg.ru/api/regru2/service/get_folders?domain_name=test.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetFolders()
	{
		$params = [

		];
		return $this->request('service/get_folders', $params);
	}


	/**
	 * Получение параметров услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_details
	 * @link https://api.reg.ru/api/regru2/service/get_details?input_data={"username":"test","password":"test","domains":[{"dname":"vschizh.ru"},{"dname":"vschizh.org"}],"output_content_type":"plain"}&input_format=json&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/service/get_details?domain_name=vschizh.ru&output_content_type=plain&password=test&separate_groups=1&username=test
	 * @link https://api.reg.ru/api/regru2/service/get_details?domain_name=vschizh.ru&output_content_type=plain&password=test&show_contacts_only=1&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetDetails()
	{
		$params = [

		];
		return $this->request('service/get_details', $params);
	}


	/**
	 * Получение параметров услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_service_get_details
	 *
	 *
	 * @return mixed
	 */
	public function serviceServiceGetDetails()
	{
		$params = [

		];
		return $this->request('service/service_get_details', $params);
	}


	/**
	 * Получение списка выделенных серверов доступных для заказа
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_dedicated_server_list
	 * @link https://api.reg.ru/api/regru2/service/get_dedicated_server_list?output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetDedicatedServerList()
	{
		$params = [

		];
		return $this->request('service/get_dedicated_server_list', $params);
	}


	/**
	 * Настройка услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_update
	 * @link https://api.reg.ru/api/regru2/service/update?dname=qqq.ru&fwd_action=addfwd&fwdfrom=/&fwdto=http://www.reg.ru&output_content_type=plain&password=test&servtype=srv_webfwd&username=test&webfwd_type=redirect
	 *
	 *
	 * @return mixed
	 */
	public function serviceUpdate()
	{
		$params = [

		];
		return $this->request('service/update', $params);
	}


	/**
	 * Продление услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_renew
	 * @link https://api.reg.ru/api/regru2/service/renew?output_content_type=plain&password=test&period=2&service_id=123456&username=test
	 * @link https://api.reg.ru/api/regru2/service/renew?domain_name=regrupanel.ru&output_content_type=plain&password=test&period=1&servtype=srv_hosting_ispmgr&username=test
	 *
	 * @var mixed $allow_create_bills
	 * @var mixed $ok_if_no_money
	 * @var mixed $pay_type
	 * @var mixed $point_of_sale
	 * @var mixed $period
	 *
	 * @return mixed
	 */
	public function serviceRenew($allow_create_bills, $ok_if_no_money, $pay_type, $point_of_sale, $period)
	{
		$params = [
			'allow_create_bills' => $allow_create_bills,
			'ok_if_no_money' => $ok_if_no_money,
			'pay_type' => $pay_type,
			'point_of_sale' => $point_of_sale,
			'period' => $period
		];
		return $this->request('service/renew', $params);
	}


	/**
	 * Получение списка счетов, связанных с указанными услугами
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_bills
	 * @link https://api.reg.ru/api/regru2/service/get_bills?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetBills()
	{
		$params = [

		];
		return $this->request('service/get_bills', $params);
	}


	/**
	 * Установить/снять флаг автопродления
	 *
	 * @see https://www.reg.ru/support/help/api2#service_set_autorenew_flag
	 * @link https://api.reg.ru/api/regru2/service/set_autorenew_flag?dname=qqq.ru&flag_value=1&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $flag_value
	 *
	 * @return mixed
	 */
	public function serviceSetAutorenewFlag($flag_value)
	{
		$params = [
			'flag_value' => $flag_value
		];
		return $this->request('service/set_autorenew_flag', $params);
	}


	/**
	 * Приостановить услугу (для домена - снятие делегирования)
	 *
	 * @see https://www.reg.ru/support/help/api2#service_suspend
	 * @link https://api.reg.ru/api/regru2/service/suspend?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceSuspend()
	{
		$params = [

		];
		return $this->request('service/suspend', $params);
	}


	/**
	 * Возобновить услугу (для домена - установить делегирование)
	 *
	 * @see https://www.reg.ru/support/help/api2#service_resume
	 * @link https://api.reg.ru/api/regru2/service/resume?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceResume()
	{
		$params = [

		];
		return $this->request('service/resume', $params);
	}


	/**
	 * Расчитать дробное число периодов до истечения срока действия услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_depreciated_period
	 * @link https://api.reg.ru/api/regru2/service/get_depreciated_period?dname=qqq.ru&output_content_type=plain&password=test&servtype=srv_hosting_ispmgr&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetDepreciatedPeriod()
	{
		$params = [

		];
		return $this->request('service/get_depreciated_period', $params);
	}


	/**
	 * Произвести повышение подтипа (тарифа) услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_upgrade
	 * @link https://api.reg.ru/api/regru2/service/upgrade?dname=qqq.ru&output_content_type=plain&password=test&period=2&servtype=srv_hosting_ispmgr&subtype=Host-2-1209&username=test
	 *
	 * @var mixed $disk_size
	 * @var mixed $period
	 * @var mixed $servtype
	 * @var mixed $subtype
	 *
	 * @return mixed
	 */
	public function serviceUpgrade($disk_size, $period, $servtype, $subtype)
	{
		$params = [
			'disk_size' => $disk_size,
			'period' => $period,
			'servtype' => $servtype,
			'subtype' => $subtype
		];
		return $this->request('service/upgrade', $params);
	}


	/**
	 * Предоставить право частичного управления услугой другому пользователю
	 *
	 * @see https://www.reg.ru/support/help/api2#service_partcontrol_grant
	 * @link https://api.reg.ru/api/regru2/service/partcontrol_grant?newlogin=test_user&output_content_type=plain&password=test&service_id=1&username=test
	 *
	 * @var mixed $newlogin
	 *
	 * @return mixed
	 */
	public function servicePartcontrolGrant($newlogin)
	{
		$params = [
			'newlogin' => $newlogin
		];
		return $this->request('service/partcontrol_grant', $params);
	}


	/**
	 * Отключить право частичного управления услугой
	 *
	 * @see https://www.reg.ru/support/help/api2#service_partcontrol_revoke
	 * @link https://api.reg.ru/api/regru2/service/partcontrol_revoke?output_content_type=plain&password=test&service_id=1&username=test
	 *
	 *
	 * @return mixed
	 */
	public function servicePartcontrolRevoke()
	{
		$params = [

		];
		return $this->request('service/partcontrol_revoke', $params);
	}


	/**
	 * Повторить email сообщение
	 *
	 * @see https://www.reg.ru/support/help/api2#service_resend_mail
	 * @link https://api.reg.ru/api/regru2/service/resend_mail?output_content_type=plain&password=test&servtype=srv_ssl_certificate&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceResendMail()
	{
		$params = [

		];
		return $this->request('service/resend_mail', $params);
	}


	/**
	 * Пополнить счёт услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_refill
	 * @link https://api.reg.ru/api/regru2/service/refill?amount=10&currency=UAH&output_content_type=plain&password=test&service_id=123456&username=test
	 *
	 *
	 * @return mixed
	 */
	public function serviceRefill()
	{
		$params = [

		];
		return $this->request('service/refill', $params);
	}


	/**
	 * Вывести средства со счета внешней услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_refund
	 *
	 *
	 * @return mixed
	 */
	public function serviceRefund()
	{
		$params = [

		];
		return $this->request('service/refund', $params);
	}


	/**
	 * Получить баланс внешней услуги
	 *
	 * @see https://www.reg.ru/support/help/api2#service_get_balance
	 *
	 *
	 * @return mixed
	 */
	public function serviceGetBalance()
	{
		$params = [

		];
		return $this->request('service/get_balance', $params);
	}


	/**
	 * Получить ссылку на панель управления Seowizard'ом
	 *
	 * @see https://www.reg.ru/support/help/api2#service_seowizard_manage_link
	 *
	 *
	 * @return mixed
	 */
	public function serviceSeowizardManageLink()
	{
		$params = [

		];
		return $this->request('service/seowizard_manage_link', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_nop
	 * @link https://api.reg.ru/api/regru2/domain/nop?output_content_type=plain
	 * @link https://api.reg.ru/api/regru2/domain/nop?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainNop()
	{
		$params = [

		];
		return $this->request('domain/nop', $params);
	}


	/**
	 * Получение цен на регистрацию/продление доменов во всех доступных зонах
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_prices
	 * @link https://api.reg.ru/api/regru2/domain/get_prices?output_content_type=plain&password=test&username=test
	 *
	 * @var mixed|null $show_renew_data
	 * @var mixed|null $show_update_data
	 * @var mixed|null $currency
	 *
	 * @return mixed
	 */
	public function domainGetPrices($show_renew_data = NULL, $show_update_data = NULL, $currency = NULL)
	{
		$params = [
			'show_renew_data' => $show_renew_data,
			'show_update_data' => $show_update_data,
			'currency' => $currency
		];
		return $this->request('domain/get_prices', $params);
	}


	/**
	 * Подбор имени домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_suggest
	 * @link https://api.reg.ru/api/regru2/domain/get_suggest?additional_word=новый&output_content_type=plain&password=test&tlds=рф&use_hyphen=1&username=test&word=дом
	 *
	 * @var mixed $use_hyphen
	 * @var mixed $tlds
	 * @var mixed $category
	 * @var mixed $word
	 * @var mixed|null $additional_word
	 *
	 * @return mixed
	 */
	public function domainGetSuggest($use_hyphen, $tlds, $category, $word, $additional_word = NULL)
	{
		$params = [
			'use_hyphen' => $use_hyphen,
			'tlds' => $tlds,
			'category' => $category,
			'word' => $word,
			'additional_word' => $additional_word
		];
		return $this->request('domain/get_suggest', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#domain_get_premium_prices
	 * @link https://api.reg.ru/api/regru2/domain/get_premium_prices?input_data={"currency":"USD","domains":["ua.ae.org 007.academy"]}&input_format=json&password=test&username=test
	 *
	 * @var mixed $currency
	 * @var mixed $domains
	 *
	 * @return mixed
	 */
	public function domainGetPremiumPrices($currency, $domains)
	{
		$params = [
			'currency' => $currency,
			'domains' => $domains
		];
		return $this->request('domain/get_premium_prices', $params);
	}


	/**
	 * Список освобождённых доменов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_deleted
	 * @link https://api.reg.ru/api/regru2/domain/get_deleted?min_pr=1&password=test&tlds=ru&username=test
	 *
	 * @var mixed $hidereg
	 * @var mixed $min_pr
	 * @var mixed $min_cy
	 * @var mixed $created_to
	 * @var mixed $created_from
	 * @var mixed $deleted_from
	 * @var mixed $deleted_to
	 * @var mixed $tlds
	 *
	 * @return mixed
	 */
	public function domainGetDeleted($hidereg, $min_pr, $min_cy, $created_to, $created_from, $deleted_from, $deleted_to, $tlds)
	{
		$params = [
			'hidereg' => $hidereg,
			'min_pr' => $min_pr,
			'min_cy' => $min_cy,
			'created_to' => $created_to,
			'created_from' => $created_from,
			'deleted_from' => $deleted_from,
			'deleted_to' => $deleted_to,
			'tlds' => $tlds
		];
		return $this->request('domain/get_deleted', $params);
	}


	/**
	 * Проверка доступности регистрации домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_check
	 * @link https://api.reg.ru/api/regru2/domain/check?input_data={"domains":[{"dname":"ya.ru"},{"dname":"yayayayayaya.ru"},{"dname":"xn--000.com"},{"dname":"china.cn"},{"dname":"ййй.me"},{"dname":"wwww.ww"},{"dname":"a.ru"},{"dname":"qqйй.com"},{"dname":"rr.ru.com"}]}&input_format=json&password=test&username=test
	 *
	 * @var mixed $domain_name
	 * @var mixed $is_transfer
	 * @var mixed $domains
	 * @var mixed|null $premium_as_taken
	 * @var mixed|null $currency
	 *
	 * @return mixed
	 */
	public function domainCheck($domain_name, $is_transfer, $domains, $premium_as_taken = NULL, $currency = NULL)
	{
		$params = [
			'domain_name' => $domain_name,
			'is_transfer' => $is_transfer,
			'domains' => $domains,
			'premium_as_taken' => $premium_as_taken,
			'currency' => $currency
		];
		return $this->request('domain/check', $params);
	}


	/**
	 * Подать заявку на регистрацию домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_create
	 * @link https://api.reg.ru/api/regru2/domain/create?birth_date=01.01.1101&country=RU&descr=Vschizh site&domain_name=vschizh.ru&e_mail=test@test.ru&ns0=ns1.reg.ru&ns1=ns2.reg.ru&output_content_type=plain&p_addr=12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу&passport=22 44 668800, выдан по месту правления 01.01.1164&password=test&person=Svyatoslav V Ryurik&person_r=Рюрик Святослав Владимирович&phone=+7 495 1234567&username=test
	 * @link https://api.reg.ru/api/regru2/domain/create?input_data={"contacts":{"country":"RU","e_mail":"test@test.ru","person_r":"Рюрик Святослав Владимирович","phone":"%2B7 495 1234567","birth_date":"01.01.1101","descr":"Vschizh site","person":"Svyatoslav V Ryurik","p_addr":"12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу, князю Вщижскому","passport":"22 44 668800, выдан по месту правления 01.09.1164"},"domain_name":"vschizh.su","nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"}}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/create?input_data={"profile_type":"RU.PP","profile_name":"my_like_ru_profile","domain_name":"vschizh.su","nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"}}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/create?input_data={"contacts":{"country":"RU","e_mail":"ruriksvyatvlad@mail.ru","person_r":"Рюрик Святослав Владимирович","phone":"+7 495 208102233","birth_date":"01.01.1101","descr":"Vschizh site","person":"Svyatoslav V Ryurik","p_addr":"12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу, князю Вщижскому","passport":"22 44 668800, выдан по месту правления 01.09.1164"},"domains":[{"dname":"vschizh.su","srv_certificate":"free","srv_parking":"free"},{"dname":"vschizh.su","srv_webfwd":""}],"nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"}}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $point_of_sale
	 * @var mixed $domain_name
	 * @var mixed $pay_type
	 * @var mixed $ok_if_no_money
	 * @var mixed $reg_premium
	 * @var mixed $subtype
	 * @var mixed $nss
	 * @var mixed $not_delegated
	 * @var mixed $enduser_ip
	 * @var mixed $period
	 * @var mixed $domains
	 * @var mixed $contacts
	 * @var mixed $profile_type
	 * @var mixed $profile_name
	 * @var mixed|null $comment
	 * @var mixed|null $admin_comment
	 * @var mixed|null $user_servid
	 *
	 * @return mixed
	 */
	public function domainCreate($point_of_sale, $domain_name, $pay_type, $ok_if_no_money, $reg_premium, $subtype, $nss, $not_delegated, $enduser_ip, $period, $domains, $contacts, $profile_type, $profile_name, $comment = NULL, $admin_comment = NULL, $user_servid = NULL)
	{
		$params = [
			'point_of_sale' => $point_of_sale,
			'domain_name' => $domain_name,
			'pay_type' => $pay_type,
			'ok_if_no_money' => $ok_if_no_money,
			'reg_premium' => $reg_premium,
			'subtype' => $subtype,
			'nss' => $nss,
			'not_delegated' => $not_delegated,
			'enduser_ip' => $enduser_ip,
			'period' => $period,
			'domains' => $domains,
			'contacts' => $contacts,
			'profile_type' => $profile_type,
			'profile_name' => $profile_name,
			'comment' => $comment,
			'admin_comment' => $admin_comment,
			'user_servid' => $user_servid
		];
		return $this->request('domain/create', $params);
	}


	/**
	 * Подать заявку на перенос домена от другого регистратора
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_transfer
	 *
	 *
	 * @return mixed
	 */
	public function domainTransfer()
	{
		$params = [

		];
		return $this->request('domain/transfer', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#get_transfer_status
	 * @link https://api.reg.ru/api/regru2/domain/get_transfer_status?input_data={"domains":[{"dname":"ya.ru"},{"dname":"qwerty.ooo"},{"dname":"xn--41a.com"},{"dname":"zzz.рф"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainGetTransferStatus()
	{
		$params = [

		];
		return $this->request('domain/get_transfer_status', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#set_new_authinfo
	 * @link https://api.reg.ru/api/regru2/domain/set_new_authinfo?authinfo=hjgf7jfj8f8&dname=test.com&output_content_type=plain&output_format=json&password=test&username=test
	 *
	 * @var mixed $authinfo
	 *
	 * @return mixed
	 */
	public function domainSetNewAuthinfo($authinfo)
	{
		$params = [
			'authinfo' => $authinfo
		];
		return $this->request('domain/set_new_authinfo', $params);
	}


	/**
	 * Отменить перенос домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_cancel_transfer
	 *
	 *
	 * @return mixed
	 */
	public function domainCancelTransfer()
	{
		$params = [

		];
		return $this->request('domain/cancel_transfer', $params);
	}


	/**
	 * Получить список доменов с истекающим сроком регистрации
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_expiring_domains
	 *
	 *
	 * @return mixed
	 */
	public function domainGetExpiringDomains()
	{
		$params = [

		];
		return $this->request('domain/get_expiring_domains', $params);
	}


	/**
	 * Получить список освобождающихся доменов с характеристиками, после регистрации или продления домены удаляются из списка
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_rereg_data
	 * @link https://api.reg.ru/api/regru2/domain/get_rereg_data?input_data={"domains":[{"dname":"qqq.ru"},{"dname":"eee.ru"}],"min_pr":"2","sortcol":"vis"}&input_format=json&output_content_type=plain&output_format=json&password=test&username=test
	 *
	 * @var mixed $registrar
	 * @var mixed $price
	 * @var mixed $traf
	 * @var mixed $delete_date
	 * @var mixed $sortcol
	 * @var mixed $limit_from
	 * @var mixed $limit
	 * @var mixed $premium
	 * @var mixed $vis
	 * @var mixed $views
	 * @var mixed $max_chars
	 * @var mixed $search_query
	 * @var mixed $dname_matching
	 * @var mixed $min_pr
	 * @var mixed $min_cy
	 * @var mixed $zone
	 * @var mixed $kley
	 * @var mixed $domains
	 *
	 * @return mixed
	 */
	public function domainGetReregData($registrar, $price, $traf, $delete_date, $sortcol, $limit_from, $limit, $premium, $vis, $views, $max_chars, $search_query, $dname_matching, $min_pr, $min_cy, $zone, $kley, $domains)
	{
		$params = [
			'registrar' => $registrar,
			'price' => $price,
			'traf' => $traf,
			'delete_date' => $delete_date,
			'sortcol' => $sortcol,
			'limit_from' => $limit_from,
			'limit' => $limit,
			'premium' => $premium,
			'vis' => $vis,
			'views' => $views,
			'max_chars' => $max_chars,
			'search_query' => $search_query,
			'dname_matching' => $dname_matching,
			'min_pr' => $min_pr,
			'min_cy' => $min_cy,
			'zone' => $zone,
			'kley' => $kley,
			'domains' => $domains
		];
		return $this->request('domain/get_rereg_data', $params);
	}


	/**
	 * Сделать ставки на освобождающиеся домены
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_set_rereg_bids
	 * @link https://api.reg.ru/api/regru2/domain/set_rereg_bids?input_data={"contacts":{"country":"RU","e_mail":"test@test.ru","person_r":"Рюрик Святослав Владимирович","phone":"+7 495 1234567","birth_date":"01.01.1101","descr":"Vschizh site","person":"Svyatoslav V Ryurik","p_addr":"12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу, князю Вщижскому","passport":"22 44 668800, выдан по месту правления 01.01.1164"},"domains":[{"dname":"vschizh.ru","price":225},{"dname":"vschizh.su","price":400}],"nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"}}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/set_rereg_bids?input_data={"contacts":{"country":"RU","e_mail":"test@test.ru","person_r":"Рюрик Святослав Владимирович","phone":"+7 495 1234567","birth_date":"01.01.1101","descr":"Vschizh site","person":"Svyatoslav V Ryurik","p_addr":"12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу, князю Вщижскому","passport":"22 44 668800, выдан по месту правления 01.01.1164"},"domains":[{"dname":"vschizh.ru","price":225},{"dname":"vschizh.su","price":400}],"nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"}}&input_format=json&output_content_type=plain
	 *
	 * @var mixed $domains
	 * @var mixed $nss
	 * @var mixed $contacts
	 *
	 * @return mixed
	 */
	public function domainSetReregBids($domains, $nss, $contacts)
	{
		$params = [
			'domains' => $domains,
			'nss' => $nss,
			'contacts' => $contacts
		];
		return $this->request('domain/set_rereg_bids', $params);
	}


	/**
	 * Получить свои ставки на освобождающиеся домены, после регистрации или продления домены удаляются из списка
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_user_rereg_bids
	 * @link https://api.reg.ru/api/regru2/domain/get_user_rereg_bids?output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainGetUserReregBids()
	{
		$params = [

		];
		return $this->request('domain/get_user_rereg_bids', $params);
	}


	/**
	 * Получение ссылки на закачивание документов из интернета для .RU/.SU/.РФ доменов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_docs_upload_uri
	 * @link https://api.reg.ru/api/regru2/domain/get_docs_upload_uri?dname=test.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainGetDocsUploadUri()
	{
		$params = [

		];
		return $this->request('domain/get_docs_upload_uri', $params);
	}


	/**
	 * Обновление контактных данных доменов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_update_contacts
	 * @link https://api.reg.ru/api/regru2/domain/update_contacts?birth_date=01.01.1101&country=RU&descr=Vschizh site&domain_name=vschizh.ru&e_mail=test@test.ru&output_content_type=plain&p_addr=12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу&passport=22 44 668800, выдан по месту правления 01.01.1164&password=test&person=Svyatoslav V Ryurik&person_r=Рюрик Святослав Владимирович&phone=%2B7 495 1234567&username=test
	 * @link https://api.reg.ru/api/regru2/domain/update_contacts?birth_date=01.01.1101&country=RU&descr=Vschizh site&domain_name=vschizh.ru Запрос со списком доменов https://api.reg.ru/api/regru2/domain/update_contacts?input_format=json&e_mail=test@test.ru&input_data={"username":"test","password":"test","contacts":{"country":"RU","e_mail":"test@test.ru","person_r":"Рюрик Святослав Владимирович","phone":"%2B7 495 1234567","birth_date":"01.01.1101","descr":"Vschizh site","person":"Svyatoslav V Ryurik","p_addr":"12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу, князю Вщижскому","passport":"22 44 668800, выдан по месту правления 01.01.1164"},"domains":[{"dname":"vschizh.ru"},{"dname":"vschizh.su"}]}&output_content_type=plain&p_addr=12345, г. Вщиж, ул. Княжеска, д.1, Рюрику Святославу Владимировичу&passport=22 44 668800, выдан по месту правления 01.01.1164&password=test&person=Svyatoslav V Ryurik&person_r=Рюрик Святослав Владимирович&phone=+7 495 1234567&username=test
	 *
	 * @var mixed $payout_agreement
	 * @var mixed $domains
	 * @var mixed $contacts
	 *
	 * @return mixed
	 */
	public function domainUpdateContacts($payout_agreement, $domains, $contacts)
	{
		$params = [
			'payout_agreement' => $payout_agreement,
			'domains' => $domains,
			'contacts' => $contacts
		];
		return $this->request('domain/update_contacts', $params);
	}


	/**
	 * Изменение флагов «Private Person» и «Total Private Person» скрытия/отображения контактных данных в whois
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_update_private_person_flag
	 * @link https://api.reg.ru/api/regru2/domain/update_private_person_flag?input_data={"username":"test","password":"test","domains":[{"dname":"vschizh.ru"},{"dname":"vschizh.su"}],"private_person_flag":"1","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $private_person_flag
	 *
	 * @return mixed
	 */
	public function domainUpdatePrivatePersonFlag($private_person_flag)
	{
		$params = [
			'private_person_flag' => $private_person_flag
		];
		return $this->request('domain/update_private_person_flag', $params);
	}


	/**
	 * Внести nameserver в NSI-registry
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_register_ns
	 * @link https://api.reg.ru/api/regru2/domain/register_ns?dname=test.com&ns0=ns0.test.com&ns0ip=1.2.3.4&output_content_type=plain&output_format=json&password=test&username=test
	 *
	 * @var mixed $ns0ip
	 * @var mixed $ns0
	 * @var mixed $domain_name
	 *
	 * @return mixed
	 */
	public function domainRegisterNs($ns0ip, $ns0, $domain_name)
	{
		$params = [
			'ns0ip' => $ns0ip,
			'ns0' => $ns0,
			'domain_name' => $domain_name
		];
		return $this->request('domain/register_ns', $params);
	}


	/**
	 * Удалить nameserver из NSI-registry
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_delete_ns
	 * @link https://api.reg.ru/api/regru2/domain/delete_ns?dname=test.com&ns0=ns0.test.com&ns0ip=1.2.3.4&output_content_type=plain&output_format=json&password=test&username=test
	 *
	 * @var mixed $ns0ip
	 * @var mixed $ns0
	 * @var mixed $domain_name
	 *
	 * @return mixed
	 */
	public function domainDeleteNs($ns0ip, $ns0, $domain_name)
	{
		$params = [
			'ns0ip' => $ns0ip,
			'ns0' => $ns0,
			'domain_name' => $domain_name
		];
		return $this->request('domain/delete_ns', $params);
	}


	/**
	 * Получение DNS серверов доменов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_get_nss
	 * @link https://api.reg.ru/api/regru2/domain/get_nss?domain_name=test.ru&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/get_nss?domain_name=test.ru&input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.su"}],"output_content_type":"plain"}&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainGetNss()
	{
		$params = [

		];
		return $this->request('domain/get_nss', $params);
	}


	/**
	 * Изменение списка DNS серверов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_update_nss
	 * @link https://api.reg.ru/api/regru2/domain/update_nss?dname=test.ru&ns0=ns1.test.com&ns0ip=1.2.3.4&ns1=ns2.test.com&ns1ip=2.3.4.5,3.4.5.6&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/update_nss?input_data={"dname":"test.ru","nss":{"ns0":"ns1.test.ru", "ns1":"ns2.test.ru", "ns0ip":"1.2.3.4,2.3.4.5", "ns1ip":["3.4.5.6","4.5.6.7"]}}&input_format=json&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/update_nss?input_data={"domains":[{"dname":"test.ru"},{"dname":"test.su"},{"dname":"----.ru"}],"nss":{"ns0":"ns1.reg.ru","ns1":"ns2.reg.ru"},"output_content_type":"plain"}&input_format=json&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/update_nss?domain_name=test.ru&output_content_type=plain&password=test&undelegate=1&username=test
	 *
	 * @var mixed $undelegate
	 * @var mixed $nss
	 * @var mixed $domain_name
	 * @var mixed $nsX
	 * @var mixed $payout_agreement
	 * @var mixed|null $nsXip
	 *
	 * @return mixed
	 */
	public function domainUpdateNss($undelegate, $nss, $domain_name, $nsX, $payout_agreement, $nsXip = NULL)
	{
		$params = [
			'undelegate' => $undelegate,
			'nss' => $nss,
			'domain_name' => $domain_name,
			'nsX' => $nsX,
			'payout_agreement' => $payout_agreement,
			'nsXip' => $nsXip
		];
		return $this->request('domain/update_nss', $params);
	}


	/**
	 * Установка флага делегирования домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_delegate
	 * @link https://api.reg.ru/api/regru2/domain/delegate?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.su"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function domainDelegate()
	{
		$params = [

		];
		return $this->request('domain/delegate', $params);
	}


	/**
	 * Снятие флага делегирования домена
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_undelegate
	 * @link https://api.reg.ru/api/regru2/domain/undelegate?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.su"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function domainUndelegate()
	{
		$params = [

		];
		return $this->request('domain/undelegate', $params);
	}


	/**
	 * Передача домена на другой аккаунт
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_transfer_to_another_account
	 * @link https://api.reg.ru/api/regru2/domain/transfer_to_another_account?dname=test.su&new_user_name=not_test&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $set_me_as_referrer
	 * @var mixed $new_user_name
	 *
	 * @return mixed
	 */
	public function domainTransferToAnotherAccount($set_me_as_referrer, $new_user_name)
	{
		$params = [
			'set_me_as_referrer' => $set_me_as_referrer,
			'new_user_name' => $new_user_name
		];
		return $this->request('domain/transfer_to_another_account', $params);
	}


	/**
	 * Просмотр списка передаваемых доменов
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_look_at_entering_list
	 * @link https://api.reg.ru/api/regru2/domain/look_at_entering_list?output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function domainLookAtEnteringList()
	{
		$params = [

		];
		return $this->request('domain/look_at_entering_list', $params);
	}


	/**
	 * Принять или отклонить передаваемый домен
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_accept_or_refuse_entering_list
	 * @link https://api.reg.ru/api/regru2/domain/accept_or_refuse_entering_list?action_type=yes&dname=test.ru&id=123456&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/accept_or_refuse_entering_list?input_data={"domains":[{"dname":"test.ru","id":"123456","action_type":"accept"},{"dname":"test.su","id":"123457","action_type":"refuse"},{"dname":"test.com","id":"123458","action_type":"xxx"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $action_type
	 * @var mixed $id
	 * @var mixed $domain_name
	 *
	 * @return mixed
	 */
	public function domainAcceptOrRefuseEnteringList($action_type, $id, $domain_name)
	{
		$params = [
			'action_type' => $action_type,
			'id' => $id,
			'domain_name' => $domain_name
		];
		return $this->request('domain/accept_or_refuse_entering_list', $params);
	}


	/**
	 * Отправить заявку на перенос доменов на свой аккаунт
	 *
	 * @see https://www.reg.ru/support/help/api2#domain_request_to_transfer
	 * @link https://api.reg.ru/api/regru2/domain/request_to_transfer?input_data={"domains":[{"domain_name":"reg.ru"},{"dname":"test0.ru"},{"dname":"test1.ru"},{"dname":"test2.ru"},{"dname":"test3.ru"}]}&input_format=json&password=test&username=test
	 *
	 * @var mixed $domains
	 * @var mixed $domain_name
	 *
	 * @return mixed
	 */
	public function domainRequestToTransfer($domains, $domain_name)
	{
		$params = [
			'domains' => $domains,
			'domain_name' => $domain_name
		];
		return $this->request('domain/request_to_transfer', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#create_authinfo_request
	 * @link https://api.reg.ru/api/regru2/domain/create_authinfo_request?delivery_method=email&domain_name=test.ru&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/create_authinfo_request?input_data={"domains":[{"dname":"test.ru"},{"dname":"тест.рф"}]}&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $delivery_method
	 *
	 * @return mixed
	 */
	public function domainCreateAuthinfoRequest($delivery_method)
	{
		$params = [
			'delivery_method' => $delivery_method
		];
		return $this->request('domain/create_authinfo_request', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#get_tld_info
	 * @link https://api.reg.ru/api/regru2/domain/get_tld_info?password=test&tld=ru&username=test
	 *
	 * @var mixed $tld
	 *
	 * @return mixed
	 */
	public function domainGetTldInfo($tld)
	{
		$params = [
			'tld' => $tld
		];
		return $this->request('domain/get_tld_info', $params);
	}


	/**
	 * @see https://www.reg.ru/support/help/api2#send_email_verification_letter
	 * @link https://api.reg.ru/api/regru2/domain/send_email_verification_letter?dname=test.com&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/domain/send_email_verification_letter?check_only=1&dname=test.com&password=test&username=test
	 *
	 * @var mixed $check_only
	 * @var mixed $dname
	 *
	 * @return mixed
	 */
	public function domainSendEmailVerificationLetter($check_only, $dname)
	{
		$params = [
			'check_only' => $check_only,
			'dname' => $dname
		];
		return $this->request('domain/send_email_verification_letter', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_nop
	 * @link https://api.reg.ru/api/regru2/zone/nop?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneNop()
	{
		$params = [

		];
		return $this->request('zone/nop', $params);
	}


	/**
	 * Cвязать поддомен с IPv4-адресом
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_alias
	 * @link https://api.reg.ru/api/regru2/zone/add_alias?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"@","ipaddr":"111.111.111.111","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $ipaddr
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddAlias($ipaddr, $subdomain)
	{
		$params = [
			'ipaddr' => $ipaddr,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_alias', $params);
	}


	/**
	 * Cвязать поддомен с IPv6-адресом
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_aaaa
	 * @link https://api.reg.ru/api/regru2/zone/add_aaaa?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"@","ipaddr":"aa11::a111:11aa:aaa1:aa1a","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $ipaddr
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddAaaa($ipaddr, $subdomain)
	{
		$params = [
			'ipaddr' => $ipaddr,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_aaaa', $params);
	}


	/**
	 * Cвязать поддомен с именем другого домена
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_cname
	 * @link https://api.reg.ru/api/regru2/zone/add_cname?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"mail","canonical_name":"mx10.test.ru","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $canonical_name
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddCname($canonical_name, $subdomain)
	{
		$params = [
			'canonical_name' => $canonical_name,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_cname', $params);
	}


	/**
	 * Указать почтовый сервер в виде доменного имени или IP-адреса, который будет принимать почту для вашего домена
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_mx
	 * @link https://api.reg.ru/api/regru2/zone/add_mx?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"@","mail_server":"mail","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $mail_server
	 * @var mixed $priority
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddMx($mail_server, $priority, $subdomain)
	{
		$params = [
			'mail_server' => $mail_server,
			'priority' => $priority,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_mx', $params);
	}


	/**
	 * Передать управление поддоменами на другие DNS-сервера
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_ns
	 * @link https://api.reg.ru/api/regru2/zone/add_ns?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"tt","dns_server":"ns1.test.ru","record_number":"10","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $record_number
	 * @var mixed $dns_server
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddNs($record_number, $dns_server, $subdomain)
	{
		$params = [
			'record_number' => $record_number,
			'dns_server' => $dns_server,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_ns', $params);
	}


	/**
	 * Добавить произвольную текстовую запись (TXT) для поддомена
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_txt
	 * @link https://api.reg.ru/api/regru2/zone/add_txt?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"subdomain":"mail","text":"testmail","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $text
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneAddTxt($text, $subdomain)
	{
		$params = [
			'text' => $text,
			'subdomain' => $subdomain
		];
		return $this->request('zone/add_txt', $params);
	}


	/**
	 * Добавить сервисную запись
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_add_srv
	 * @link https://api.reg.ru/api/regru2/zone/add_srv?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"service":"_sip._udp","priority":"0","port":"5060","target":"sip.test.ru","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $target
	 * @var mixed $service
	 * @var mixed $priority
	 * @var mixed $port
	 * @var mixed|null $weight
	 *
	 * @return mixed
	 */
	public function zoneAddSrv($target, $service, $priority, $port, $weight = NULL)
	{
		$params = [
			'target' => $target,
			'service' => $service,
			'priority' => $priority,
			'port' => $port,
			'weight' => $weight
		];
		return $this->request('zone/add_srv', $params);
	}


	/**
	 * Получение ресурсных записей зоны для каждого поддомена
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_get_resource_records
	 * @link https://api.reg.ru/api/regru2/zone/get_resource_records?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneGetResourceRecords()
	{
		$params = [

		];
		return $this->request('zone/get_resource_records', $params);
	}


	/**
	 * Добавить/удалить несколько ресурсных записей одним запросом
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_update_records
	 * @link https://api.reg.ru/api/regru2/zone/update_records?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru","action_list":[{"action":"add_aalias","subdomain":"www","ipaddr":"11.22.33.44"},{"action":"add_cname","subdomain":"@","canonical_name":"www.test.ru"}]}],"output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $action_list
	 *
	 * @return mixed
	 */
	public function zoneUpdateRecords($action_list)
	{
		$params = [
			'action_list' => $action_list
		];
		return $this->request('zone/update_records', $params);
	}


	/**
	 * Изменить время жизни кеша для зоны
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_update_soa
	 * @link https://api.reg.ru/api/regru2/zone/update_soa?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"ttl":"1d","minimum_ttl":"4h","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $minimum_ttl
	 * @var mixed $ttl
	 *
	 * @return mixed
	 */
	public function zoneUpdateSoa($minimum_ttl, $ttl)
	{
		$params = [
			'minimum_ttl' => $minimum_ttl,
			'ttl' => $ttl
		];
		return $this->request('zone/update_soa', $params);
	}


	/**
	 * Настройка зоны для web-форвардинга
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_tune_forwarding
	 * @link https://api.reg.ru/api/regru2/zone/tune_forwarding?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneTuneForwarding()
	{
		$params = [

		];
		return $this->request('zone/tune_forwarding', $params);
	}


	/**
	 * Удалить записи настройки зоны для web-форвардинга
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_clear_forwarding
	 * @link https://api.reg.ru/api/regru2/zone/clear_forwarding?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneClearForwarding()
	{
		$params = [

		];
		return $this->request('zone/clear_forwarding', $params);
	}


	/**
	 * Настройка зоны для парковки
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_tune_parking
	 * @link https://api.reg.ru/api/regru2/zone/tune_parking?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneTuneParking()
	{
		$params = [

		];
		return $this->request('zone/tune_parking', $params);
	}


	/**
	 * Удалить записи настройки зоны для парковки
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_clear_parking
	 * @link https://api.reg.ru/api/regru2/zone/clear_parking?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru"},{"dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneClearParking()
	{
		$params = [

		];
		return $this->request('zone/clear_parking', $params);
	}


	/**
	 * Удалить ресурсную запись
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_remove_record
	 * @link https://api.reg.ru/api/regru2/zone/remove_record?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru","dname":"test.com"}],"subdomain":"@","content":"111.111.111.111","record_type":"A","output_content_type":"plain"}&input_format=json
	 *
	 * @var mixed $content
	 * @var mixed $priority
	 * @var mixed $record_type
	 * @var mixed $subdomain
	 *
	 * @return mixed
	 */
	public function zoneRemoveRecord($content, $priority, $record_type, $subdomain)
	{
		$params = [
			'content' => $content,
			'priority' => $priority,
			'record_type' => $record_type,
			'subdomain' => $subdomain
		];
		return $this->request('zone/remove_record', $params);
	}


	/**
	 * Удалить все ресурсные записи зоны
	 *
	 * @see https://www.reg.ru/support/help/api2#zone_clear
	 * @link https://api.reg.ru/api/regru2/zone/clear?input_data={"username":"test","password":"test","domains":[{"dname":"test.ru","dname":"test.com"}],"output_content_type":"plain"}&input_format=json
	 *
	 *
	 * @return mixed
	 */
	public function zoneClear()
	{
		$params = [

		];
		return $this->request('zone/clear', $params);
	}


	/**
	 * Проверка работоспособности API
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_nop
	 * @link https://api.reg.ru/api/regru2/hosting/nop?output_content_type=plain
	 *
	 *
	 * @return mixed
	 */
	public function hostingNop()
	{
		$params = [

		];
		return $this->request('hosting/nop', $params);
	}


	/**
	 * Получение URL'а Jelastic'а
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_get_jelastic_refill_url
	 * @link https://api.reg.ru/api/regru2/hosting/get_jelastic_refill_url?password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function hostingGetJelasticRefillUrl()
	{
		$params = [

		];
		return $this->request('hosting/get_jelastic_refill_url', $params);
	}


	/**
	 * Установка URL'а Jelastic'а
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_set_jelastic_refill_url
	 * @link https://api.reg.ru/api/regru2/hosting/set_jelastic_refill_url?email=<email>&password=test&url=http://test.com?service_id=<service_id>&username=test
	 *
	 * @var mixed $url
	 *
	 * @return mixed
	 */
	public function hostingSetJelasticRefillUrl($url)
	{
		$params = [
			'url' => $url
		];
		return $this->request('hosting/set_jelastic_refill_url', $params);
	}


	/**
	 * Получение URL'а конструктора ParallelsWPB
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_get_parallelswpb_constructor_url
	 * @link https://api.reg.ru/api/regru2/hosting/get_parallelswpb_constructor_url?password=test&service_id=123456&username=test
	 *
	 * @var mixed $service_id
	 *
	 * @return mixed
	 */
	public function hostingGetParallelswpbConstructorUrl($service_id)
	{
		$params = [
			'service_id' => $service_id
		];
		return $this->request('hosting/get_parallelswpb_constructor_url', $params);
	}


	/**
	 * Получение списка доступных тем
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_get_rs_themes
	 * @link https://api.reg.ru/api/regru2/hosting/get_rs_themes?output_content_type=plain&password=test&servtype=srv_rs_joomla&subtype=corporate&username=test
	 *
	 *
	 * @return mixed
	 */
	public function hostingGetRsThemes()
	{
		$params = [

		];
		return $this->request('hosting/get_rs_themes', $params);
	}


	/**
	 * Получение списка операционных систем
	 *
	 * @see https://www.reg.ru/support/help/api2#hosting_get_os_templates
	 *
	 *
	 * @return mixed
	 */
	public function hostingGetOsTemplates()
	{
		$params = [

		];
		return $this->request('hosting/get_os_templates', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_nop
	 * @link https://api.reg.ru/api/regru2/folder/nop?folder_id=123456&folder_name=test_folder_name&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function folderNop()
	{
		$params = [

		];
		return $this->request('folder/nop', $params);
	}


	/**
	 * Создание папки
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_create
	 * @link https://api.reg.ru/api/regru2/folder/create?folder_name=test_folder_name&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $folder_name
	 *
	 * @return mixed
	 */
	public function folderCreate($folder_name)
	{
		$params = [
			'folder_name' => $folder_name
		];
		return $this->request('folder/create', $params);
	}


	/**
	 * Удаление папки
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_remove
	 * @link https://api.reg.ru/api/regru2/folder/remove?folder_id=123456&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/remove?folder_id=123456&folder_name=test_folder_name&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function folderRemove()
	{
		$params = [

		];
		return $this->request('folder/remove', $params);
	}


	/**
	 * Переименование папки
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_rename
	 * @link https://api.reg.ru/api/regru2/folder/rename?folder_id=123456&folder_name=test_folder_name&new_folder_name=new_test_folder_name&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/rename?folder_name=test_folder_name&new_folder_name=new_test_folder_name&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $new_folder_name
	 *
	 * @return mixed
	 */
	public function folderRename($new_folder_name)
	{
		$params = [
			'new_folder_name' => $new_folder_name
		];
		return $this->request('folder/rename', $params);
	}


	/**
	 * Выдать список услуг в папке
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_get_services
	 * @link https://api.reg.ru/api/regru2/folder/get_services?folder_name=test_folder_name&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/get_services?folder_id=12345&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function folderGetServices()
	{
		$params = [

		];
		return $this->request('folder/get_services', $params);
	}


	/**
	 * Добавление услуг в папку
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_add_services
	 * @link https://api.reg.ru/api/regru2/folder/add_services?input_data={"folder_name":"test_folder_name","services":[{"domain_name":"test1.ru"},{"domain_name":"test2.ru"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/add_services?input_data={"folder_id":"12345","services":[{"service_id":"1000"},{"service_id":"1001"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $return_folder_contents
	 * @var mixed $services
	 *
	 * @return mixed
	 */
	public function folderAddServices($return_folder_contents, $services)
	{
		$params = [
			'return_folder_contents' => $return_folder_contents,
			'services' => $services
		];
		return $this->request('folder/add_services', $params);
	}


	/**
	 * Удаление услуг из папки
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_remove_services
	 * @link https://api.reg.ru/api/regru2/folder/remove_services?input_data={"folder_name":"test_folder_name","services":[{"domain_name":"test1.ru"},{"domain_name":"test2.ru"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/remove_services?input_data={"folder_id":"12345","services":[{"service_id":"1000"},{"service_id":"1001"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $return_folder_contents
	 * @var mixed $services
	 *
	 * @return mixed
	 */
	public function folderRemoveServices($return_folder_contents, $services)
	{
		$params = [
			'return_folder_contents' => $return_folder_contents,
			'services' => $services
		];
		return $this->request('folder/remove_services', $params);
	}


	/**
	 * Перезаписывание услуг в папке
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_replace_services
	 * @link https://api.reg.ru/api/regru2/folder/replace_services?input_data={"folder_name":"test_folder_name","services":[{"domain_name":"test1.ru"},{"domain_name":"test2.ru"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/replace_services?input_data={"folder_id":"12345","services":[{"service_id":"1000"},{"service_id":"1001"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $return_folder_contents
	 * @var mixed $services
	 *
	 * @return mixed
	 */
	public function folderReplaceServices($return_folder_contents, $services)
	{
		$params = [
			'return_folder_contents' => $return_folder_contents,
			'services' => $services
		];
		return $this->request('folder/replace_services', $params);
	}


	/**
	 * Перенос услуг из одной папки в другую
	 *
	 * @see https://www.reg.ru/support/help/api2#folder_move_services
	 * @link https://api.reg.ru/api/regru2/folder/move_services?input_data={"folder_name":"test_folder_name","new_folder_name":"new_test_folder_name","services":[{"domain_name":"test1.ru"},{"domain_name":"test2.ru"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 * @link https://api.reg.ru/api/regru2/folder/move_services?input_data={"folder_id":"12345","new_folder_id":"1234567","services":[{"service_id":"1000"},{"service_id":"1001"}]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 * @var mixed $return_folder_contents
	 * @var mixed $services
	 *
	 * @return mixed
	 */
	public function folderMoveServices($return_folder_contents, $services)
	{
		$params = [
			'return_folder_contents' => $return_folder_contents,
			'services' => $services
		];
		return $this->request('folder/move_services', $params);
	}


	/**
	 * Тестовая функция
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_nop
	 * @link https://api.reg.ru/api/regru2/shop/nop?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopNop()
	{
		$params = [

		];
		return $this->request('shop/nop', $params);
	}


	/**
	 * Добавление лота/лотов
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_add_lot
	 * @link https://api.reg.ru/api/regru2/shop/add_lot?input_data={"category_ids":["4","10","380"],"deny_bids_lower_rejected":"1","description":"desc","keywords":["k1","k2","k3"],"lot_price_type":"fixed","lots":[{"dname":"domain1.ru","price":"201","rent_price":"21"},{"dname":"domain2.ru","price":"202","rent_price":"22"},{"dname":"domain3.ru","price":"203","rent_price":"23"}],"price":"200","rent":"1","rent_price":"20","setup_parking_page":"0","sold_with":"site,tm"}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopAddLot()
	{
		$params = [

		];
		return $this->request('shop/add_lot', $params);
	}


	/**
	 * Обновление лота
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_update_lot
	 * @link https://api.reg.ru/api/regru2/shop/update_lot?input_data={"category_ids":["4","10","5"],"deny_bids_lower_rejected":"1","description":"desc","dname":["domain1.ru","domain2.ru","domain3.ru"],"keywords":["k1","k2","k4"],"lot_price_type":"fixed","price":"209","rent":"1","rent_price":"29","setup_parking_page":"0","sold_with":"site,tm"}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopUpdateLot()
	{
		$params = [

		];
		return $this->request('shop/update_lot', $params);
	}


	/**
	 * Удаление лота
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_delete_lot
	 * @link https://api.reg.ru/api/regru2/shop/delete_lot?input_data={"dname":["domain1.ru","domain2.ru","domain3.ru"]}&input_format=json&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopDeleteLot()
	{
		$params = [

		];
		return $this->request('shop/delete_lot', $params);
	}


	/**
	 * Получение информации о лоте
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_get_info
	 * @link https://api.reg.ru/api/regru2/shop/get_info?dname=domain1.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopGetInfo()
	{
		$params = [

		];
		return $this->request('shop/get_info', $params);
	}


	/**
	 * Получение списка лотов
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_get_lot_list
	 * @link https://api.reg.ru/api/regru2/shop/get_lot_list?itemsonpage=100&output_content_type=plain&password=test&pg=0&show_my_lots=1&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopGetLotList()
	{
		$params = [

		];
		return $this->request('shop/get_lot_list', $params);
	}


	/**
	 * Получение списка категорий лотов
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_get_category_list
	 * @link https://api.reg.ru/api/regru2/shop/get_category_list?dname=qqq.ru&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopGetCategoryList()
	{
		$params = [

		];
		return $this->request('shop/get_category_list', $params);
	}


	/**
	 * Получение списка ключевых слов лотов
	 *
	 * @see https://www.reg.ru/support/help/api2#shop_get_suggested_tags
	 * @link https://api.reg.ru/api/regru2/shop/get_suggested_tags?limit=25&output_content_type=plain&password=test&username=test
	 *
	 *
	 * @return mixed
	 */
	public function shopGetSuggestedTags()
	{
		$params = [

		];
		return $this->request('shop/get_suggested_tags', $params);
	}

}
